{"version":3,"file":"static/js/207.8ba83de6.chunk.js","mappings":"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","sources":["components/AuthFormIn/AuthFormIn.styled.jsx","components/AuthFormIn/AuthFormIn.jsx","pages/SignInPage/SignInPage.jsx","redux/selectors.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LoginContainer = styled.form`\n  position: relative;\n  width: 335px;\n  height: auto;\n  margin-left: 20px;\n  margin-right: 20px;\n\n  @media (min-width: 768px) {\n    width: 400px;\n    margin-left: 64px;\n  }\n\n  @media (min-width: 1024px) {\n    margin-left: 100px;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: #f3f3f3;\n  font-size: 28px;\n  font-weight: 600;\n  line-height: 1.15;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    line-height: 1.1;\n  }\n`;\n\nexport const InputBlock = styled.div`\n  position: relative;\n  margin-top: 28px;\n  margin-bottom: 14px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  height: 54px;\n  border-radius: 200px;\n  border: 1px solid rgba(243, 243, 243, 0.2);\n  background-color: transparent;\n  padding-left: 24px;\n  margin-bottom: 14px;\n  color: var(--text-btn-color);\n\n  &::placeholder {\n    color: #f3f3f3;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.3;\n  }\n\n  @media (min-width: 768px) {\n    height: 56px;\n    font-size: 17px;\n    line-height: 1.5;\n\n    &::placeholder {\n      font-size: 17px;\n    }\n  }\n\n  @media (min-width: 1024px) {\n    padding-left: 22px;\n  }\n\n  &:focus,\n  &:hover {\n    outline: none;\n    color: #f3f3f3;\n    border-color: rgba(243, 243, 243, 0.5);\n    background-color: transparent;\n  }\n`;\n\nexport const ErrorContainer = styled.div`\n  position: absolute;\n`;\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  font-size: 12px;\n`;\n\nexport const StyledBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 54px;\n\n  border-radius: 42px;\n  border: 1px solid rgba(243, 243, 243, 0.2);\n  background: #f3f3f3;\n\n  color: #161f37;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.1;\n\n  outline: none;\n  cursor: pointer;\n  transition: 0.3s ease;\n\n  &:hover {\n    background: #434d67;\n    color: #f3f3f3;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.3;\n  text-decoration-line: underline;\n  padding-top: 14px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n  }\n`;\n\nexport const IconPasswordHidden = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 96px;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nexport const IconPasswordShow = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 96px;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { ToastContainer } from 'react-toastify';\n// import { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport sprite from 'assets/sprite.svg';\n\nimport { signinUser } from 'redux/auth/authOperations';\nimport { selectIsLoggedIn } from '../../redux/selectors';\nimport {\n  LoginContainer,\n  Title,\n  InputBlock,\n  StyledInput,\n  ErrorContainer,\n  ErrorMessage,\n  StyledBtn,\n  StyledLink,\n  IconPasswordHidden,\n  IconPasswordShow,\n} from './AuthFormIn.styled';\n\nconst validationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Please enter a valid email')\n    .required('Email address is required'),\n  password: yup\n    .string()\n    .min(8, ({ min }) => `Password must be at least ${min} characters`)\n    .max(30, ({ max }) => `Password must be no more than ${max} characters`)\n    .required('Password is required'),\n});\n\nconst AuthFormIn = () => {\n  const [textPassword, setTextPassword] = useState(true);\n\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const navigate = useNavigate();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const resetForm = () => {\n    formik.resetForm({\n      values: initialValues,\n    });\n  };\n\n  const onSubmit = async values => {\n    if (isLoggedIn) {\n      // toast.error('User is already logged in');\n      navigate('/home', { replace: true });\n      return;\n    } else if (dispatch(signinUser({ ...values }))) {\n      resetForm();\n      if (isLoggedIn) {\n        navigate('/home', { replace: true });\n      }\n    }\n  };\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validationSchema,\n  });\n\n  return (\n    <LoginContainer onSubmit={formik.handleSubmit}>\n      <ToastContainer />\n      <Title>Sign In</Title>\n\n      <InputBlock>\n        <label htmlFor=\"email\">\n          <StyledInput\n            name=\"email\"\n            type=\"text\"\n            placeholder=\"Email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n        </label>\n        {formik.touched.email && formik.errors.email && (\n          <ErrorContainer>\n            <ErrorMessage>{formik.errors.email}</ErrorMessage>\n          </ErrorContainer>\n        )}\n\n        <label htmlFor=\"password\">\n          <StyledInput\n            name=\"password\"\n            type={textPassword ? 'password' : 'text'}\n            placeholder=\"Password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n            style={{ color: textPassword ? 'inherit' : '#f3f3f3' }}\n          />\n          <div onClick={() => setTextPassword(prevState => !prevState)}>\n            {textPassword ? (\n              <IconPasswordHidden>\n                <use href={`${sprite}#icon-eye-off`} />\n              </IconPasswordHidden>\n            ) : (\n              <IconPasswordShow>\n                <use href={`${sprite}#icon-eye`} />\n              </IconPasswordShow>\n            )}\n          </div>\n        </label>\n        {formik.touched.password && formik.errors.password && (\n          <ErrorContainer>\n            <ErrorMessage>{formik.errors.password}</ErrorMessage>\n          </ErrorContainer>\n        )}\n      </InputBlock>\n\n      <StyledBtn\n        type=\"submit\"\n        disabled={!formik.isValid || formik.isSubmitting}\n      >\n        Sign In\n      </StyledBtn>\n      <StyledLink to=\"/signup\">Sign Up</StyledLink>\n    </LoginContainer>\n  );\n};\n\nexport default AuthFormIn;\n","import AuthFormIn from 'components/AuthFormIn/AuthFormIn';\n\nconst SignUpPage = () => {\n  return (\n    <>\n      <AuthFormIn />\n    </>\n  );\n};\n\nexport default SignUpPage;","// Auth\n\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectUser = state => state.auth.user;\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n"],"names":["LoginContainer","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","InputBlock","_templateObject3","StyledInput","_templateObject4","ErrorContainer","_templateObject5","ErrorMessage","_templateObject6","StyledBtn","_templateObject7","StyledLink","NavLink","_templateObject8","IconPasswordHidden","_templateObject9","IconPasswordShow","_templateObject10","validationSchema","yup","shape","email","required","password","min","_ref","concat","max","_ref2","_useState","useState","_useState2","_slicedToArray","textPassword","setTextPassword","dispatch","useDispatch","isLoggedIn","useSelector","selectIsLoggedIn","navigate","useNavigate","initialValues","onSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","replace","abrupt","signinUser","_objectSpread","formik","resetForm","stop","_x","apply","arguments","useFormik","_jsxs","handleSubmit","children","_jsx","ToastContainer","htmlFor","name","type","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","style","color","onClick","prevState","href","sprite","disabled","isValid","isSubmitting","to","_Fragment","AuthFormIn","state","auth","selectUser","user"],"sourceRoot":""}