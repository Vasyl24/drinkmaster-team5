{"version":3,"file":"static/js/396.bc0e165e.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.styled.jsx","components/AuthForm/AuthForm.jsx","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["// import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport DatePicker from 'react-datepicker';\n\nexport const RegistrationContainer = styled.form`\n  max-width: 335px;\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 2000;\n\n  @media (min-width: 768px) {\n    max-width: 470px;\n    padding: 0;\n    justify-content: flex-start;\n    align-items: flex-start;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 485px;\n    padding-left: 100px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-weight: 600;\n  font-size: 28px;\n  line-height: calc(32 / 28);\n  text-align: center;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    text-align: left;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 16px;\n\n  &::placeholder {\n    color: #999;\n  }\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 16px;\n\n  &::placeholder {\n    color: #999;\n  }\n`;\n\nexport const Icon小alendar = styled.svg`\n  width: 24px;\n  height: 24px;\n`;\n\nexport const Plaseholder = styled.p`\n  font-size: 14px;\n  line-height: calc(18 / 14);\n  text-align: center;\n  margin-top: 14px;\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n    text-align: left;\n  }\n`;\n\nexport const StyledBtn = styled.button`\n  padding: 14px 40px;\n  font-size: 14px;\n  line-height: calc(18 / 16);\n  font-weight: 600;\n  background: #f3f3f3;\n  color: #161f37;\n  border-radius: 42px;\n  border: 1px solid rgba(243, 243, 243, 0.2);\n  cursor: pointer;\n  transition: backgroundColor 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s,\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n  @media (min-width: 768px) {\n    padding: 18px 44px;\n    font-size: 16px;\n  }\n\n  &:hover {\n    background: transparent;\n    color: #f3f3f3;\n  }\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { signupUser } from 'redux/auth/authOperations';\nimport { useFormik } from 'formik';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { format } from 'date-fns';\nimport * as yup from 'yup';\nimport sprite from 'assets/sprite.svg';\nimport {\n  RegistrationContainer,\n  Title,\n  StyledInput,\n  StyledDatePicker,\n  Icon小alendar,\n  StyledBtn,\n} from './AuthForm.styled';\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, ({ min }) => `Name must be at least ${min} characters`)\n    .max(16, ({ max }) => `Name must be at least ${max} characters`)\n    .required('Name is required')\n    .label('Name'),\n  birthdate: yup.date().nullable().required('Your age is required'),\n  email: yup\n    .string()\n    .email('Please enter valid email')\n    .required('Email address is Required'),\n  password: yup\n    .string()\n    .min(8, ({ min }) => `Password must be at least ${min} characters`)\n    .max(30, ({ max }) => `Password must be no more than ${max} characters`)\n    .required('Password is required'),\n});\n\nconst formatDate = date => {\n  return format(date, 'dd/MM/yyyy');\n};\n\nconst AuthForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const initialValues = {\n    name: '',\n    birthdate: null,\n    email: '',\n    password: '',\n  };\n\n  const resetForm = () => {\n    formik.resetForm({\n      values: initialValues,\n    });\n  };\n\n  const onSubmit = values => {\n    const formattedValues = {\n      ...values,\n      birthdate: values.birthdate ? formatDate(values.birthdate) : null,\n    };\n\n    dispatch(signupUser({ ...formattedValues }));\n    resetForm();\n    navigate('/home', { replace: true });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validationSchema,\n  });\n\n  return (\n    <RegistrationContainer onSubmit={formik.handleSubmit}>\n      <Title>Sign up</Title>\n      <div>\n        <label htmlFor=\"name\">\n          <StyledInput\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.name}\n          />\n        </label>\n        {formik.touched.name && formik.errors.name && (\n          <div style={{ color: 'red' }}>{formik.errors.name}</div>\n        )}\n      </div>\n      <div>\n        <label htmlFor=\"birthdate\">\n          <StyledDatePicker\n            name=\"birthdate\"\n            placeholderText=\"dd/MM/yyyy\"\n            selected={formik.values.birthdate}\n            onChange={date => {\n              formik.setFieldValue('birthdate', date);\n            }}\n            dateFormat=\"dd/MM/yyyy\"\n            onBlur={formik.handleBlur}\n          />\n\n          <Icon小alendar>\n            <use href={sprite + '#icon-calendar'} />\n          </Icon小alendar>\n        </label>\n        {formik.touched.birthdate && formik.errors.birthdate && (\n          <div style={{ color: 'red' }}>{formik.errors.birthdate}</div>\n        )}\n      </div>\n      <div>\n        <label htmlFor=\"email\">\n          <StyledInput\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n        </label>\n        {formik.touched.email && formik.errors.email && (\n          <div style={{ color: 'red' }}>{formik.errors.email}</div>\n        )}\n      </div>\n      <div>\n        <label htmlFor=\"password\">\n          <StyledInput\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n          />\n        </label>\n        {formik.touched.password && formik.errors.password && (\n          <div style={{ color: 'red' }}>{formik.errors.password}</div>\n        )}\n      </div>\n      <StyledBtn\n        type=\"submit\"\n        disabled={!formik.isValid || formik.isSubmitting}\n      >\n        Sign up\n      </StyledBtn>\n    </RegistrationContainer>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from 'components/AuthForm/AuthForm';\n\nconst SignUpPage = () => {\n  return (\n    <>\n      <AuthForm />\n    </>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["RegistrationContainer","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","StyledInput","_templateObject3","StyledDatePicker","DatePicker","_templateObject4","Icon小alendar","_templateObject5","StyledBtn","_templateObject6","_templateObject7","validationSchema","yup","shape","name","min","_ref","concat","max","_ref2","required","label","birthdate","nullable","email","password","_ref3","_ref4","dispatch","useDispatch","navigate","useNavigate","initialValues","formik","useFormik","onSubmit","values","date","formattedValues","_objectSpread","format","signupUser","resetForm","replace","_jsxs","handleSubmit","children","_jsx","htmlFor","type","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","style","color","placeholderText","selected","setFieldValue","dateFormat","href","sprite","disabled","isValid","isSubmitting","_Fragment","AuthForm"],"sourceRoot":""}