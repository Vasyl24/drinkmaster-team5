{"version":3,"file":"static/js/515.fcca20ab.chunk.js","mappings":"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","sources":["components/SignUpForm/SignUpForm.styled.jsx","components/SignUpForm/SignUpForm.jsx","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport welcomesm2x from '../../assets/welcome-mob@2x.jpg';\nimport welcomesm1x from '../../assets/welcome-mob.jpg';\nimport welcomemd1x from '../../assets/welcome-tabl.jpg';\nimport welcomemd2x from '../../assets/welcome-tabl@2x.jpg';\nimport welcome1x from '../../assets/welcome-desk.jpg';\nimport welcome2x from '../../assets/welcome-desk@2x.jpg';\n\nexport const ContainerLayout = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  background-size: contain;\n  justify-content: center;\n  align-items: center;\n  background-position: right;\n  background-repeat: no-repeat;\n  background-image: linear-gradient(\n      to right,\n      rgba(6, 6, 9, 1),\n      rgba(10, 10, 17, 0)\n    ),\n    url(${welcomemd1x});\n  background-color: #0a0a11;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: linear-gradient(\n        to right,\n        rgba(6, 6, 9, 1),\n        rgba(10, 10, 17, 0)\n      ),\n      url(${welcomemd2x});\n    justify-content: left;\n  }\n\n  @media (max-width: 767.98px) {\n    justify-content: left;\n    background-image: linear-gradient(\n        to right,\n        rgba(6, 6, 9, 1),\n        rgba(10, 10, 17, 0)\n      ),\n      url(${welcomesm1x});\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: linear-gradient(\n          to right,\n          rgba(6, 6, 9, 1),\n          rgba(10, 10, 17, 0)\n        ),\n        url(${welcomesm2x});\n    }\n  }\n\n  @media (min-width: 1024px) {\n    justify-content: left;\n    background-image: linear-gradient(\n        to right,\n        rgba(6, 6, 9, 1),\n        rgba(10, 10, 17, 0)\n      ),\n      url(${welcome1x});\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: linear-gradient(\n          to right,\n          rgba(6, 6, 9, 1),\n          rgba(10, 10, 17, 0)\n        ),\n        url(${welcome2x});\n    }\n  }\n`;\n\nexport const RegisterContainer = styled.form`\n  width: 335px;\n  height: auto;\n  margin-left: 20px;\n  margin-right: 20px;\n  z-index: 1000;\n\n  @media (min-width: 768px) {\n    width: 400px;\n    margin-left: 64px;\n  }\n\n  @media (min-width: 1024px) {\n    margin-left: 100px;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: #f3f3f3;\n  font-size: 28px;\n  font-weight: 600;\n  line-height: 1.15;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    line-height: 1.1;\n  }\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  width: 335px;\n  height: 54px;\n  border-radius: 200px;\n  border: 1px solid rgba(243, 243, 243, 0.2);\n  background-color: transparent;\n  padding-left: 24px;\n  margin-bottom: 14px;\n  color: #f3f3f3;\n\n  &::placeholder {\n    color: #f3f3f3;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.3;\n    opacity: 50%;\n  }\n\n  @media (min-width: 768px) {\n    width: 400px;\n    height: 56px;\n    font-size: 17px;\n    line-height: 1.5;\n\n    &::placeholder {\n      font-size: 17px;\n    }\n  }\n\n  @media (min-width: 1024px) {\n    padding-left: 22px;\n  }\n\n  &:focus,\n  &:hover {\n    outline: none;\n    color: #f3f3f3;\n    border-color: rgba(243, 243, 243, 0.5);\n  }\n`;\n\nexport const StyledIconСalendar = styled.div`\n  position: absolute;\n  top: 100px;\n  transform: translateY(-50%);\n  right: 20px;\n  cursor: pointer;\n`;\n\nexport const IconСalendar = styled.svg`\n  width: 24px;\n  height: 24px;\n`;\n\nexport const InputBlock = styled.div`\n  position: relative;\n  margin-top: 28px;\n  margin-bottom: 14px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  height: 54px;\n  border-radius: 200px;\n  border: ${props => props.border || '1px solid rgba(243, 243, 243, 0.2)'};\n  background-color: transparent;\n  padding-left: 24px;\n  margin-bottom: 14px;\n  color: #f3f3f3;\n\n  &::placeholder {\n    color: #f3f3f3;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.3;\n    opacity: 50%;\n  }\n\n  @media (min-width: 768px) {\n    height: 56px;\n    font-size: 17px;\n    line-height: 1.5;\n\n    &::placeholder {\n      font-size: 17px;\n    }\n  }\n\n  @media (min-width: 1024px) {\n    padding-left: 22px;\n  }\n\n  &:focus,\n  &:hover {\n    border-color: rgba(243, 243, 243, 0.5);\n  }\n`;\n\nexport const ErrorContainer = styled.div`\n  margin-top: 1px;\n  position: relative;\n`;\n\nexport const ErrorMessage = styled.div`\n  position: absolute;\n  top: -10px;\n  transform: translateY(-50%);\n\n  color: #da1414;\n  font-size: 12px;\n`;\n\nexport const ValidContainer = styled.div`\n  margin-top: 1px;\n  position: relative;\n`;\n\nexport const ValidMessage = styled.div`\n  position: absolute;\n  top: -10px;\n  transform: translateY(-50%);\n\n  color: #3cbc81;\n  font-size: 12px;\n`;\n\nexport const StyledBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 54px;\n\n  border-radius: 42px;\n  border: 1px solid rgba(243, 243, 243, 0.2);\n  background: #f3f3f3;\n\n  color: #161f37;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.1;\n\n  outline: none;\n  cursor: pointer;\n  transition: 0.3s ease;\n\n  &focus,\n  &:hover {\n    background: #161f37;\n    color: #f3f3f3;\n  }\n\n  &:disabled {\n    pointer-events: none;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.3;\n  text-decoration-line: underline;\n  padding-top: 14px;\n  color: #f3f3f3;\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n  }\n`;\n\nexport const IconPasswordHidden = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 238px;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nexport const IconPasswordShow = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 238px;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nexport const IconDone = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 168px;\n  transform: translateY(-50%);\n`;\n\nexport const IconError = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 168px;\n  transform: translateY(-50%);\n`;\n","import React, { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { signupUser } from 'redux/auth/authOperations';\nimport { useFormik } from 'formik';\nimport { format, subDays } from 'date-fns';\nimport * as yup from 'yup';\nimport sprite from 'assets/sprite.svg';\nimport {\n  RegisterContainer,\n  Title,\n  InputBlock,\n  StyledInput,\n  StyledDatePicker,\n  StyledIconСalendar,\n  IconСalendar,\n  ErrorContainer,\n  ErrorMessage,\n  StyledBtn,\n  StyledLink,\n  IconPasswordHidden,\n  IconPasswordShow,\n  IconDone,\n  IconError,\n  ValidContainer,\n  ValidMessage,\n  ContainerLayout,\n} from './SignUpForm.styled';\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, ({ min }) => `The name must be at least ${min} characters`)\n    .max(20, ({ max }) => `The name must be no more than ${max} characters`)\n    .required('Name is required')\n    .label('Name'),\n  birthdate: yup.date().nullable().required('Your age is required'),\n  email: yup\n    .string()\n    .email('Please enter valid email')\n    .required('Email address is required'),\n  password: yup\n    .string()\n    .min(6, ({ min }) => `The password must be at least ${min} characters`)\n    .max(30, ({ max }) => `The password must be no more than ${max} characters`)\n    .required('Password is required'),\n});\n\nconst formatDate = date => {\n  return format(date, 'dd/MM/yyyy');\n};\n\nconst AuthForm = () => {\n  const [textPassword, setTextPassword] = useState(true);\n\n  const birthdateInputRef = useRef(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const yesterday = subDays(new Date(), 1);\n\n  const initialValues = {\n    name: '',\n    birthdate: null,\n    email: '',\n    password: '',\n  };\n\n  const resetForm = () => {\n    formik.resetForm({\n      values: initialValues,\n    });\n  };\n\n  const openCalendar = () => {\n    if (birthdateInputRef.current) {\n      birthdateInputRef.current.setOpen(true);\n    }\n  };\n\n  const onSubmit = values => {\n    const formattedValues = {\n      ...values,\n      birthdate: values.birthdate ? formatDate(values.birthdate) : null,\n    };\n\n    dispatch(signupUser({ ...formattedValues }));\n\n    resetForm();\n    navigate('/home', { replace: true });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validationSchema,\n    validateOnSubmit: true,\n  });\n\n  return (\n    <ContainerLayout>\n      <RegisterContainer onSubmit={formik.handleSubmit}>\n        <Title>Sign up</Title>\n        <InputBlock>\n          <label htmlFor=\"name\">\n            <StyledInput\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Name\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.name}\n            />\n            {formik.touched.name && formik.errors.name && (\n              <ErrorContainer>\n                <ErrorMessage>{formik.errors.name}</ErrorMessage>\n              </ErrorContainer>\n            )}\n          </label>\n\n          <label htmlFor=\"birthdate\">\n            <StyledDatePicker\n              id=\"birthdate\"\n              name=\"birthdate\"\n              placeholderText=\"dd/mm/yyyy\"\n              selected={formik.values.birthdate}\n              onChange={date => {\n                formik.setFieldValue('birthdate', date);\n              }}\n              dateFormat=\"dd/MM/yyyy\"\n              onBlur={formik.handleBlur}\n              maxDate={yesterday}\n              showYearDropdown\n              showMonthDropdown\n              yearDropdownItemNumber={70}\n              scrollableYearDropdown\n              scrollableMonthDropdown\n              dropdownMode=\"select\"\n            />\n            <StyledIconСalendar onClick={openCalendar}>\n              <IconСalendar>\n                <use href={sprite + '#icon-calendar'} />\n              </IconСalendar>\n            </StyledIconСalendar>\n\n            {formik.touched.birthdate && formik.errors.birthdate && (\n              <ErrorContainer>\n                <ErrorMessage>{formik.errors.birthdate}</ErrorMessage>\n              </ErrorContainer>\n            )}\n          </label>\n\n          <label htmlFor=\"email\">\n            <StyledInput\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Email\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n              border={\n                formik.touched.email &&\n                (formik.errors.email\n                  ? '1px solid #da1414'\n                  : '1px solid #3cbc81')\n              }\n            />\n            {formik.touched.email &&\n              (formik.errors.email ? (\n                <ErrorContainer>\n                  <ErrorMessage>{formik.errors.email}</ErrorMessage>\n                </ErrorContainer>\n              ) : (\n                <ValidContainer>\n                  <ValidMessage>This is a correct email</ValidMessage>\n                </ValidContainer>\n              ))}\n\n            {formik.touched.email &&\n              (formik.errors.email ? (\n                <IconError>\n                  <use href={`${sprite}#icon-error`} />\n                </IconError>\n              ) : (\n                <IconDone>\n                  <use href={`${sprite}#icon-done`} />\n                </IconDone>\n              ))}\n          </label>\n\n          <label htmlFor=\"password\">\n            <StyledInput\n              name=\"password\"\n              type={textPassword ? 'password' : 'text'}\n              placeholder=\"Password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.password}\n              border={\n                formik.touched.password &&\n                (formik.errors.password\n                  ? '1px solid #da1414'\n                  : '1px solid #3cbc81')\n              }\n            />\n            {formik.touched.password &&\n              (formik.errors.password ? (\n                <ErrorContainer>\n                  <ErrorMessage>{formik.errors.password}</ErrorMessage>\n                </ErrorContainer>\n              ) : (\n                <ValidContainer>\n                  <ValidMessage>This is a correct password</ValidMessage>\n                </ValidContainer>\n              ))}\n            <div onClick={() => setTextPassword(prevState => !prevState)}>\n              {textPassword ? (\n                <IconPasswordHidden>\n                  <use href={`${sprite}#icon-eye-off`} />\n                </IconPasswordHidden>\n              ) : (\n                <IconPasswordShow>\n                  <use href={`${sprite}#icon-eye`} />\n                </IconPasswordShow>\n              )}\n            </div>\n          </label>\n        </InputBlock>\n        <StyledBtn\n          type=\"submit\"\n          disabled={!formik.isValid || formik.isSubmitting}\n        >\n          Sign up\n        </StyledBtn>\n        <StyledLink to=\"/signin\">Sign In</StyledLink>\n      </RegisterContainer>\n    </ContainerLayout>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from 'components/SignUpForm/SignUpForm';\n\nconst SignUpPage = () => {\n  return (\n    <>\n      <AuthForm />\n    </>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["ContainerLayout","styled","_templateObject","_taggedTemplateLiteral","welcomemd1x","welcomemd2x","welcomesm1x","welcomesm2x","welcome1x","welcome2x","RegisterContainer","_templateObject2","Title","_templateObject3","StyledDatePicker","DatePicker","_templateObject4","StyledIconСalendar","_templateObject5","IconСalendar","_templateObject6","InputBlock","_templateObject7","StyledInput","_templateObject8","props","border","ErrorContainer","_templateObject9","ErrorMessage","_templateObject10","ValidContainer","_templateObject11","ValidMessage","_templateObject12","StyledBtn","_templateObject13","StyledLink","NavLink","_templateObject14","IconPasswordHidden","_templateObject15","IconPasswordShow","_templateObject16","IconDone","_templateObject17","IconError","_templateObject18","validationSchema","yup","shape","name","min","_ref","concat","max","_ref2","required","label","birthdate","nullable","email","password","_ref3","_ref4","_useState","useState","_useState2","_slicedToArray","textPassword","setTextPassword","birthdateInputRef","useRef","dispatch","useDispatch","navigate","useNavigate","yesterday","subDays","Date","initialValues","formik","useFormik","onSubmit","values","date","formattedValues","_objectSpread","format","signupUser","resetForm","replace","validateOnSubmit","_jsx","children","_jsxs","handleSubmit","htmlFor","type","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","id","placeholderText","selected","setFieldValue","dateFormat","maxDate","showYearDropdown","showMonthDropdown","yearDropdownItemNumber","scrollableYearDropdown","scrollableMonthDropdown","dropdownMode","onClick","current","setOpen","href","sprite","prevState","disabled","isValid","isSubmitting","to","_Fragment","AuthForm"],"sourceRoot":""}