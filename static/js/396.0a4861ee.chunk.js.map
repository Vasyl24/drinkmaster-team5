{"version":3,"file":"static/js/396.0a4861ee.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.styled.jsx","components/AuthForm/AuthForm.jsx","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport DatePicker from 'react-datepicker';\nimport welcomesm2x from '../../assets/welcome-mob@2x.jpg';\nimport welcomesm1x from '../../assets/welcome-mob.jpg';\nimport welcomemd1x from '../../assets/welcome-tabl.jpg';\nimport welcomemd2x from '../../assets/welcome-tabl@2x.jpg';\nimport welcome1x from '../../assets/welcome-desk.jpg';\nimport welcome2x from '../../assets/welcome-desk@2x.jpg';\n\nexport const ContainerLayout = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  background-size: contain;\n  justify-content: center;\n  align-items: center;\n  background-position: right;\n  background-repeat: no-repeat;\n  background-image: linear-gradient(\n      to right,\n      rgba(6, 6, 9, 1),\n      rgba(10, 10, 17, 0)\n    ),\n    url(${welcomemd1x});\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: linear-gradient(\n        to right,\n        rgba(6, 6, 9, 1),\n        rgba(10, 10, 17, 0)\n      ),\n      url(${welcomemd2x});\n    justify-content: left;\n  }\n\n  @media (max-width: 767.98px) {\n    justify-content: left;\n    background-image: linear-gradient(\n        to right,\n        rgba(6, 6, 9, 1),\n        rgba(10, 10, 17, 0)\n      ),\n      url(${welcomesm1x});\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: linear-gradient(\n          to right,\n          rgba(6, 6, 9, 1),\n          rgba(10, 10, 17, 0)\n        ),\n        url(${welcomesm2x});\n    }\n  }\n\n  @media (min-width: 1024px) {\n    justify-content: left;\n    background-image: linear-gradient(\n        to right,\n        rgba(6, 6, 9, 1),\n        rgba(10, 10, 17, 0)\n      ),\n      url(${welcome1x});\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: linear-gradient(\n          to right,\n          rgba(6, 6, 9, 1),\n          rgba(10, 10, 17, 0)\n        ),\n        url(${welcome2x});\n    }\n  }\n`;\n\nexport const RegisterContainer = styled.form`\n  width: 335px;\n  height: auto;\n  margin-left: 20px;\n  margin-right: 20px;\n\n  @media (min-width: 768px) {\n    width: 400px;\n    margin-left: 64px;\n  }\n\n  @media (min-width: 1024px) {\n    width: 400px;\n\n    margin-left: 100px;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: #f3f3f3;\n  font-size: 28px;\n  font-weight: 600;\n  line-height: 1.15;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    line-height: 1.1;\n  }\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  width: 335px;\n  height: 54px;\n  border-radius: 200px;\n  border: 1px solid rgba(243, 243, 243, 0.2);\n  background-color: transparent;\n  padding-left: 24px;\n  margin-bottom: 14px;\n  color: var(--text-btn-color);\n\n  &::placeholder {\n    color: #f3f3f3;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.3;\n  }\n\n  @media (min-width: 768px) {\n    width: 400px;\n    height: 56px;\n    font-size: 17px;\n    line-height: 1.5;\n\n    &::placeholder {\n      font-size: 17px;\n    }\n  }\n\n  @media (min-width: 1024px) {\n    padding-left: 22px;\n  }\n\n  &:focus,\n  &:hover {\n    outline: none;\n    color: #f3f3f3;\n    border-color: rgba(243, 243, 243, 0.5);\n    background-color: transparent;\n  }\n`;\n\nexport const StyledIconСalendar = styled.div`\n  position: absolute;\n  top: 100px;\n  transform: translateY(-50%);\n  right: 20px;\n  cursor: pointer;\n`;\n\nexport const IconСalendar = styled.svg`\n  width: 24px;\n  height: 24px;\n`;\n\nexport const InputBlock = styled.div`\n  position: relative;\n  margin-top: 28px;\n  margin-bottom: 14px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  height: 54px;\n  border-radius: 200px;\n  border: 1px solid rgba(243, 243, 243, 0.2);\n  background-color: transparent;\n  padding-left: 24px;\n  margin-bottom: 14px;\n  color: var(--text-btn-color);\n\n  &::placeholder {\n    color: #f3f3f3;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.3;\n  }\n\n  @media (min-width: 768px) {\n    height: 56px;\n    font-size: 17px;\n    line-height: 1.5;\n\n    &::placeholder {\n      font-size: 17px;\n    }\n  }\n\n  @media (min-width: 1024px) {\n    padding-left: 22px;\n  }\n\n  &:focus,\n  &:hover {\n    outline: none;\n    color: #f3f3f3;\n    border-color: rgba(243, 243, 243, 0.5);\n    background-color: transparent;\n  }\n`;\n\nexport const ErrorContainer = styled.div`\n  position: absolute;\n`;\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  font-size: 12px;\n`;\n\nexport const StyledBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 54px;\n\n  border-radius: 42px;\n  border: 1px solid rgba(243, 243, 243, 0.2);\n  background: #f3f3f3;\n\n  color: #161f37;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.1;\n\n  outline: none;\n  cursor: pointer;\n  transition: 0.3s ease;\n\n  &:hover {\n    background: #434d67;\n    color: #f3f3f3;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.3;\n  text-decoration-line: underline;\n  padding-top: 14px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n  }\n`;\n\nexport const IconPasswordHidden = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 238px;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nexport const IconPasswordShow = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 238px;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n","import React, { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { signupUser } from 'redux/auth/authOperations';\nimport { useFormik } from 'formik';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { format } from 'date-fns';\nimport * as yup from 'yup';\nimport sprite from 'assets/sprite.svg';\nimport {\n  RegisterContainer,\n  Title,\n  InputBlock,\n  StyledInput,\n  StyledDatePicker,\n  StyledIconСalendar,\n  IconСalendar,\n  ErrorContainer,\n  ErrorMessage,\n  StyledBtn,\n  StyledLink,\n  IconPasswordHidden,\n  IconPasswordShow,\n  ContainerLayout,\n} from './AuthForm.styled';\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, ({ min }) => `Name must be at least ${min} characters`)\n    .max(16, ({ max }) => `Name must be at least ${max} characters`)\n    .required('Name is required')\n    .label('Name'),\n  birthdate: yup.date().nullable().required('Your age is required'),\n  email: yup\n    .string()\n    .email('Please enter valid email')\n    .required('Email address is Required'),\n  password: yup\n    .string()\n    .min(8, ({ min }) => `Password must be at least ${min} characters`)\n    .max(30, ({ max }) => `Password must be no more than ${max} characters`)\n    .required('Password is required'),\n});\n\nconst formatDate = date => {\n  return format(date, 'dd/MM/yyyy');\n};\n\nconst AuthForm = () => {\n  const [textPassword, setTextPassword] = useState(true);\n  const birthdateInputRef = useRef(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const initialValues = {\n    name: '',\n    birthdate: null,\n    email: '',\n    password: '',\n  };\n\n  const resetForm = () => {\n    formik.resetForm({\n      values: initialValues,\n    });\n  };\n\n  const openCalendar = () => {\n    if (birthdateInputRef.current) {\n      birthdateInputRef.current.setOpen(true);\n    }\n  };\n\n  const onSubmit = values => {\n    const formattedValues = {\n      ...values,\n      birthdate: values.birthdate ? formatDate(values.birthdate) : null,\n    };\n\n    dispatch(signupUser({ ...formattedValues }));\n    console.log(formattedValues);\n    console.log(values.birthdate);\n    console.log(formatDate(values.birthdate));\n    resetForm();\n    navigate('/home', { replace: true });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validationSchema,\n  });\n\n  return (\n    <ContainerLayout>\n      <RegisterContainer onSubmit={formik.handleSubmit}>\n        <Title>Sign up</Title>\n        <InputBlock>\n          <label htmlFor=\"name\">\n            <StyledInput\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Name\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.name}\n            />\n          </label>\n          {formik.touched.name && formik.errors.name && (\n            <ErrorContainer>\n              <ErrorMessage>{formik.errors.name}</ErrorMessage>\n            </ErrorContainer>\n          )}\n\n          <label htmlFor=\"birthdate\">\n            <StyledDatePicker\n              id=\"birthdate\"\n              name=\"birthdate\"\n              placeholderText=\"dd/mm/yyyy\"\n              selected={formik.values.birthdate}\n              onChange={date => {\n                formik.setFieldValue('birthdate', date);\n              }}\n              dateFormat=\"dd/MM/yyyy\"\n              onBlur={formik.handleBlur}\n            />\n            <StyledIconСalendar onClick={openCalendar}>\n              <IconСalendar>\n                <use href={sprite + '#icon-calendar'} />\n              </IconСalendar>\n            </StyledIconСalendar>\n          </label>\n\n          {formik.touched.birthdate && formik.errors.birthdate && (\n            <ErrorContainer>\n              <ErrorMessage>{formik.errors.birthdate}</ErrorMessage>\n            </ErrorContainer>\n          )}\n\n          <label htmlFor=\"email\">\n            <StyledInput\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Email\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n            />\n          </label>\n          {formik.touched.email && formik.errors.email && (\n            <ErrorContainer>\n              <ErrorMessage>{formik.errors.email}</ErrorMessage>\n            </ErrorContainer>\n          )}\n\n          <label htmlFor=\"password\">\n            <StyledInput\n              name=\"password\"\n              type={textPassword ? 'password' : 'text'}\n              placeholder=\"Password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.password}\n              style={{ color: textPassword ? 'inherit' : '#f3f3f3' }}\n            />\n            <div onClick={() => setTextPassword(prevState => !prevState)}>\n              {textPassword ? (\n                <IconPasswordHidden>\n                  <use href={`${sprite}#icon-eye-off`} />\n                </IconPasswordHidden>\n              ) : (\n                <IconPasswordShow>\n                  <use href={`${sprite}#icon-eye`} />\n                </IconPasswordShow>\n              )}\n            </div>\n          </label>\n          {formik.touched.password && formik.errors.password && (\n            <ErrorContainer>\n              <ErrorMessage>{formik.errors.password}</ErrorMessage>\n            </ErrorContainer>\n          )}\n        </InputBlock>\n        <StyledBtn\n          type=\"submit\"\n          disabled={!formik.isValid || formik.isSubmitting}\n        >\n          Sign up\n        </StyledBtn>\n        <StyledLink to=\"/signin\">Sign In</StyledLink>\n      </RegisterContainer>\n    </ContainerLayout>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from 'components/AuthForm/AuthForm';\n\nconst SignUpPage = () => {\n  return (\n    <>\n      <AuthForm />\n    </>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["ContainerLayout","styled","_templateObject","_taggedTemplateLiteral","welcomemd1x","welcomemd2x","welcomesm1x","welcomesm2x","welcome1x","welcome2x","RegisterContainer","_templateObject2","Title","_templateObject3","StyledDatePicker","DatePicker","_templateObject4","StyledIconСalendar","_templateObject5","IconСalendar","_templateObject6","InputBlock","_templateObject7","StyledInput","_templateObject8","ErrorContainer","_templateObject9","ErrorMessage","_templateObject10","StyledBtn","_templateObject11","StyledLink","NavLink","_templateObject12","IconPasswordHidden","_templateObject13","IconPasswordShow","_templateObject14","validationSchema","yup","shape","name","min","_ref","concat","max","_ref2","required","label","birthdate","nullable","email","password","_ref3","_ref4","formatDate","date","format","_useState","useState","_useState2","_slicedToArray","textPassword","setTextPassword","birthdateInputRef","useRef","dispatch","useDispatch","navigate","useNavigate","initialValues","formik","useFormik","onSubmit","values","formattedValues","_objectSpread","signupUser","console","log","resetForm","replace","_jsx","children","_jsxs","handleSubmit","htmlFor","type","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","id","placeholderText","selected","setFieldValue","dateFormat","onClick","current","setOpen","href","sprite","style","color","prevState","disabled","isValid","isSubmitting","to","_Fragment","AuthForm"],"sourceRoot":""}