{"version":3,"file":"static/js/170.0fd4d462.chunk.js","mappings":"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","sources":["components/AuthFormIn/AuthFormIn.styled.jsx","components/AuthFormIn/AuthFormIn.jsx","pages/SignInPage/SignInPage.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport welcomesm2x from '../../assets/welcome-mob@2x.jpg';\nimport welcomesm1x from '../../assets/welcome-mob.jpg';\nimport welcomemd1x from '../../assets/welcome-tabl.jpg';\nimport welcomemd2x from '../../assets/welcome-tabl@2x.jpg';\nimport welcome1x from '../../assets/welcome-desk.jpg';\nimport welcome2x from '../../assets/welcome-desk@2x.jpg';\n\nexport const ContainerLayout = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  background-size: contain;\n  justify-content: center;\n  align-items: center;\n  background-position: right;\n  background-repeat: no-repeat;\n  background-image: linear-gradient(\n      to right,\n      rgba(6, 6, 9, 1),\n      rgba(10, 10, 17, 0)\n    ),\n    url(${welcomemd1x});\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: linear-gradient(\n        to right,\n        rgba(6, 6, 9, 1),\n        rgba(10, 10, 17, 0)\n      ),\n      url(${welcomemd2x});\n    justify-content: left;\n  }\n\n  @media (max-width: 767.98px) {\n    justify-content: left;\n    background-image: linear-gradient(\n        to right,\n        rgba(6, 6, 9, 1),\n        rgba(10, 10, 17, 0)\n      ),\n      url(${welcomesm1x});\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: linear-gradient(\n          to right,\n          rgba(6, 6, 9, 1),\n          rgba(10, 10, 17, 0)\n        ),\n        url(${welcomesm2x});\n    }\n  }\n\n  @media (min-width: 1024px) {\n    justify-content: left;\n    background-image: linear-gradient(\n        to right,\n        rgba(6, 6, 9, 1),\n        rgba(10, 10, 17, 0)\n      ),\n      url(${welcome1x});\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: linear-gradient(\n          to right,\n          rgba(6, 6, 9, 1),\n          rgba(10, 10, 17, 0)\n        ),\n        url(${welcome2x});\n    }\n  }\n`;\n\nexport const LoginContainer = styled.form`\n  width: 335px;\n  height: auto;\n  margin-left: 20px;\n  margin-right: 20px;\n  z-index: 1000;\n\n  @media (min-width: 768px) {\n    width: 400px;\n    margin-left: 64px;\n  }\n\n  @media (min-width: 1024px) {\n    margin-left: 100px;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: var(--text-btn-color);\n  font-size: 28px;\n  font-weight: 600;\n  line-height: 1.15;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    line-height: 1.1;\n  }\n`;\n\nexport const InputBlock = styled.div`\n  position: relative;\n  margin-top: 28px;\n  margin-bottom: 14px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  height: 54px;\n  border-radius: 200px;\n  border: 1px solid rgba(243, 243, 243, 0.2);\n  background-color: transparent;\n  padding-left: 24px;\n  margin-bottom: 14px;\n  color: var(--text-btn-color);\n\n  &::placeholder {\n    color: var(--text-btn-color);\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.3;\n  }\n\n  @media (min-width: 768px) {\n    height: 56px;\n    font-size: 17px;\n    line-height: 1.5;\n\n    &::placeholder {\n      font-size: 17px;\n    }\n  }\n\n  @media (min-width: 1024px) {\n    padding-left: 22px;\n  }\n\n  &:focus,\n  &:hover {\n    border-color: rgba(243, 243, 243, 0.5);\n  }\n`;\n\nexport const ErrorContainer = styled.div`\n  margin-top: 1px;\n  position: relative;\n`;\n\nexport const ErrorMessage = styled.div`\n  position: absolute;\n  top: -10px;\n  transform: translateY(-50%);\n\n  color: var(--error-state-color);\n  font-size: 12px;\n`;\n\nexport const ValidContainer = styled.div`\n  margin-top: 1px;\n  position: relative;\n`;\n\nexport const ValidMessage = styled.div`\n  position: absolute;\n  top: -10px;\n  transform: translateY(-50%);\n\n  color: var(--correct-state-color);\n  font-size: 12px;\n`;\n\nexport const StyledBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 54px;\n\n  border-radius: 42px;\n  border: 1px solid rgba(243, 243, 243, 0.2);\n  background: var(--text-btn-color);\n\n  color: var(--accent-color);\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.1;\n\n  outline: none;\n  cursor: pointer;\n  transition: 0.3s ease;\n\n  &focus,\n  &:hover {\n    background: var(--hover-btn-color);\n    color: var(--text-btn-color);\n  }\n\n  &:disabled {\n    pointer-events: none;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.3;\n  text-decoration-line: underline;\n  padding-top: 14px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n  }\n`;\n\nexport const IconPasswordHidden = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 96px;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nexport const IconPasswordShow = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 96px;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nexport const IconDone = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 28px;\n  transform: translateY(-50%);\n`;\n\nexport const IconError = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 28px;\n  transform: translateY(-50%);\n`;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { toast } from 'react-hot-toast';\nimport sprite from 'assets/sprite.svg';\nimport { signinUser } from 'redux/auth/authOperations';\nimport { selectIsLoggedIn } from '../../redux/selectors';\nimport {\n  LoginContainer,\n  Title,\n  InputBlock,\n  StyledInput,\n  ErrorContainer,\n  ErrorMessage,\n  StyledBtn,\n  StyledLink,\n  IconPasswordHidden,\n  IconPasswordShow,\n  ContainerLayout,\n  ValidContainer,\n  ValidMessage,\n  IconDone,\n  IconError,\n} from './AuthFormIn.styled';\n\nconst validationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Please enter a valid email')\n    .required('Email address is required'),\n  password: yup\n    .string()\n    .min(6, ({ min }) => `The password must be at least ${min} characters`)\n    .max(30, ({ max }) => `The password must be no more than ${max} characters`)\n    .required('Password is required'),\n});\n\nconst AuthFormIn = () => {\n  const [textPassword, setTextPassword] = useState(true);\n  const [isEmailValid, setIsEmailValid] = useState(false);\n  const [isPasswordValid, setIsPasswordValid] = useState(false);\n\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const navigate = useNavigate();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const resetForm = () => {\n    formik.resetForm({\n      values: initialValues,\n    });\n  };\n\n  const handleEmailBlur = e => {\n    formik.handleBlur(e);\n    const email = e.target.value;\n    const isValid = validationSchema.fields.email.isValidSync(email);\n    setIsEmailValid(isValid);\n\n    e.target.style.borderColor = isValid ? '#3cbc81' : '#da1414';\n  };\n\n  const handlePasswordBlur = e => {\n    formik.handleBlur(e);\n    const password = e.target.value;\n    const isValid = validationSchema.fields.password.isValidSync(password);\n    setIsPasswordValid(isValid);\n\n    e.target.style.borderColor = isValid ? '#3cbc81' : '#da1414';\n  };\n\n  const onSubmit = async values => {\n    if (isLoggedIn) {\n      navigate('/home', { replace: true });\n      return;\n    }\n    const response = await dispatch(signinUser({ ...values }));\n\n    if (response && response.error) {\n      toast.error('Edit your details');\n    } else {\n      resetForm();\n    }\n  };\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validationSchema,\n    validateOnSubmit: true,\n  });\n\n  return (\n    <ContainerLayout>\n      <LoginContainer onSubmit={formik.handleSubmit}>\n        <Title>Sign In</Title>\n        <InputBlock>\n          <label htmlFor=\"email\">\n            <StyledInput\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Email\"\n              onChange={formik.handleChange}\n              onBlur={handleEmailBlur}\n              value={formik.values.email}\n            />\n\n            {isEmailValid ? (\n              <ValidContainer>\n                <ValidMessage>This is a correct email</ValidMessage>\n              </ValidContainer>\n            ) : (\n              <ErrorContainer>\n                <ErrorMessage>{formik.errors.email}</ErrorMessage>\n              </ErrorContainer>\n            )}\n\n            {formik.touched.email &&\n              (formik.errors.email ? (\n                <IconError>\n                  <use href={`${sprite}#icon-error`} />\n                </IconError>\n              ) : (\n                <IconDone>\n                  <use href={`${sprite}#icon-done`} />\n                </IconDone>\n              ))}\n          </label>\n\n          <label htmlFor=\"password\">\n            <StyledInput\n              name=\"password\"\n              type={textPassword ? 'password' : 'text'}\n              placeholder=\"Password\"\n              onChange={formik.handleChange}\n              onBlur={handlePasswordBlur}\n              value={formik.values.password}\n            />\n\n            {isPasswordValid ? (\n              <ValidContainer>\n                <ValidMessage>This is a correct password</ValidMessage>\n              </ValidContainer>\n            ) : (\n              <ErrorContainer>\n                <ErrorMessage>{formik.errors.password}</ErrorMessage>\n              </ErrorContainer>\n            )}\n\n            <div onClick={() => setTextPassword(prevState => !prevState)}>\n              {textPassword ? (\n                <IconPasswordHidden>\n                  <use href={`${sprite}#icon-eye-off`} />\n                </IconPasswordHidden>\n              ) : (\n                <IconPasswordShow>\n                  <use href={`${sprite}#icon-eye`} />\n                </IconPasswordShow>\n              )}\n            </div>\n          </label>\n        </InputBlock>\n\n        <StyledBtn\n          type=\"submit\"\n          disabled={!formik.isValid || formik.isSubmitting}\n        >\n          Sign In\n        </StyledBtn>\n        <StyledLink to=\"/signup\">Sign Up</StyledLink>\n      </LoginContainer>\n    </ContainerLayout>\n  );\n};\n\nexport default AuthFormIn;\n","import AuthFormIn from 'components/AuthFormIn/AuthFormIn';\n\nconst SignUpPage = () => {\n  return (\n    <>\n      <AuthFormIn />\n    </>\n  );\n};\n\nexport default SignUpPage;"],"names":["ContainerLayout","styled","_templateObject","_taggedTemplateLiteral","welcomemd1x","welcomemd2x","welcomesm1x","welcomesm2x","welcome1x","welcome2x","LoginContainer","_templateObject2","Title","_templateObject3","InputBlock","_templateObject4","StyledInput","_templateObject5","ErrorContainer","_templateObject6","ErrorMessage","_templateObject7","ValidContainer","_templateObject8","ValidMessage","_templateObject9","StyledBtn","_templateObject10","StyledLink","NavLink","_templateObject11","IconPasswordHidden","_templateObject12","IconPasswordShow","_templateObject13","IconDone","_templateObject14","IconError","_templateObject15","validationSchema","yup","shape","email","required","password","min","_ref","concat","max","_ref2","_useState","useState","_useState2","_slicedToArray","textPassword","setTextPassword","_useState3","_useState4","isEmailValid","setIsEmailValid","_useState5","_useState6","isPasswordValid","setIsPasswordValid","dispatch","useDispatch","isLoggedIn","useSelector","selectIsLoggedIn","navigate","useNavigate","initialValues","onSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","response","wrap","_context","prev","next","replace","abrupt","signinUser","_objectSpread","sent","error","toast","formik","resetForm","stop","_x","apply","arguments","useFormik","validateOnSubmit","_jsx","children","_jsxs","handleSubmit","htmlFor","name","type","placeholder","onChange","handleChange","onBlur","e","handleBlur","target","value","isValid","fields","isValidSync","style","borderColor","errors","touched","href","sprite","onClick","prevState","disabled","isSubmitting","to","_Fragment","AuthFormIn"],"sourceRoot":""}