{"version":3,"file":"static/js/396.85789b2a.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.styled.jsx","components/AuthForm/AuthForm.jsx","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport DatePicker from 'react-datepicker';\nimport welcomesm2x from '../../assets/welcome-mob@2x.jpg';\nimport welcomesm1x from '../../assets/welcome-mob.jpg';\nimport welcomemd1x from '../../assets/welcome-tabl.jpg';\nimport welcomemd2x from '../../assets/welcome-tabl@2x.jpg';\nimport welcome1x from '../../assets/welcome-desk.jpg';\nimport welcome2x from '../../assets/welcome-desk@2x.jpg';\n\nexport const ContainerLayout = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  background-size: contain;\n  justify-content: center;\n  align-items: center;\n  background-position: right;\n  background-repeat: no-repeat;\n  background-image: linear-gradient(\n      to right,\n      rgba(6, 6, 9, 1),\n      rgba(10, 10, 17, 0)\n    ),\n    url(${welcomemd1x});\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: linear-gradient(\n        to right,\n        rgba(6, 6, 9, 1),\n        rgba(10, 10, 17, 0)\n      ),\n      url(${welcomemd2x});\n    justify-content: left;\n  }\n\n  @media (max-width: 767.98px) {\n    justify-content: left;\n    background-image: linear-gradient(\n        to right,\n        rgba(6, 6, 9, 1),\n        rgba(10, 10, 17, 0)\n      ),\n      url(${welcomesm1x});\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: linear-gradient(\n          to right,\n          rgba(6, 6, 9, 1),\n          rgba(10, 10, 17, 0)\n        ),\n        url(${welcomesm2x});\n    }\n  }\n\n  @media (min-width: 1024px) {\n    justify-content: left;\n    background-image: linear-gradient(\n        to right,\n        rgba(6, 6, 9, 1),\n        rgba(10, 10, 17, 0)\n      ),\n      url(${welcome1x});\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: linear-gradient(\n          to right,\n          rgba(6, 6, 9, 1),\n          rgba(10, 10, 17, 0)\n        ),\n        url(${welcome2x});\n    }\n  }\n`;\n\nexport const RegisterContainer = styled.form`\n  width: 335px;\n  height: auto;\n  margin-left: 20px;\n  margin-right: 20px;\n  z-index: 1000;\n\n  @media (min-width: 768px) {\n    width: 400px;\n    margin-left: 64px;\n  }\n\n  @media (min-width: 1024px) {\n    width: 400px;\n\n    margin-left: 100px;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: #f3f3f3;\n  font-size: 28px;\n  font-weight: 600;\n  line-height: 1.15;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    line-height: 1.1;\n  }\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  width: 335px;\n  height: 54px;\n  border-radius: 200px;\n  border: 1px solid rgba(243, 243, 243, 0.2);\n  background-color: transparent;\n  padding-left: 24px;\n  margin-bottom: 14px;\n  color: #f3f3f3;\n\n  &::placeholder {\n    color: #f3f3f3;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.3;\n  }\n\n  @media (min-width: 768px) {\n    width: 400px;\n    height: 56px;\n    font-size: 17px;\n    line-height: 1.5;\n\n    &::placeholder {\n      font-size: 17px;\n    }\n  }\n\n  @media (min-width: 1024px) {\n    padding-left: 22px;\n  }\n\n  &:focus,\n  &:hover {\n    outline: none;\n    color: #f3f3f3;\n    border-color: rgba(243, 243, 243, 0.5);\n  }\n`;\n\nexport const StyledIconСalendar = styled.div`\n  position: absolute;\n  top: 100px;\n  transform: translateY(-50%);\n  right: 20px;\n  cursor: pointer;\n`;\n\nexport const IconСalendar = styled.svg`\n  width: 24px;\n  height: 24px;\n`;\n\nexport const InputBlock = styled.div`\n  position: relative;\n  margin-top: 28px;\n  margin-bottom: 14px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  height: 54px;\n  border-radius: 200px;\n  border: 1px solid rgba(243, 243, 243, 0.2);\n  background-color: transparent;\n  padding-left: 24px;\n  margin-bottom: 14px;\n  color: #f3f3f3;\n\n  &::placeholder {\n    color: #f3f3f3;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.3;\n  }\n\n  @media (min-width: 768px) {\n    height: 56px;\n    font-size: 17px;\n    line-height: 1.5;\n\n    &::placeholder {\n      font-size: 17px;\n    }\n  }\n\n  @media (min-width: 1024px) {\n    padding-left: 22px;\n  }\n\n  &:focus,\n  &:hover {\n    outline: none;\n    color: #f3f3f3;\n    border-color: rgba(243, 243, 243, 0.5);\n  }\n`;\n\nexport const ErrorContainer = styled.div`\n  margin-top: 1px;\n  position: relative;\n`;\n\nexport const ValidContainer = styled.div`\n  margin-top: 1px;\n  position: relative;\n`;\n\nexport const ErrorMessage = styled.div`\n  position: absolute;\n  top: -10px;\n  transform: translateY(-50%);\n\n  color: #da1414;\n  font-size: 12px;\n`;\n\nexport const ValidMessage = styled.div`\n  position: absolute;\n  top: -10px;\n  transform: translateY(-50%);\n\n  color: #3cbc81;\n  font-size: 12px;\n`;\n\nexport const StyledBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 54px;\n\n  border-radius: 42px;\n  border: 1px solid rgba(243, 243, 243, 0.2);\n  background: #f3f3f3;\n\n  color: #161f37;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.1;\n\n  outline: none;\n  cursor: pointer;\n  transition: 0.3s ease;\n\n  &:hover {\n    background: #434d67;\n    color: #f3f3f3;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.3;\n  text-decoration-line: underline;\n  padding-top: 14px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n  }\n`;\n\nexport const IconPasswordHidden = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 238px;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nexport const IconPasswordShow = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 238px;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nexport const IconDone = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 168px;\n  transform: translateY(-50%);\n`;\n\nexport const IconError = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 168px;\n  transform: translateY(-50%);\n`;\n","import React, { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { signupUser } from 'redux/auth/authOperations';\nimport { useFormik } from 'formik';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { format } from 'date-fns';\nimport * as yup from 'yup';\nimport sprite from 'assets/sprite.svg';\nimport {\n  RegisterContainer,\n  Title,\n  InputBlock,\n  StyledInput,\n  StyledDatePicker,\n  StyledIconСalendar,\n  IconСalendar,\n  ErrorContainer,\n  ErrorMessage,\n  StyledBtn,\n  StyledLink,\n  IconPasswordHidden,\n  IconPasswordShow,\n  IconDone,\n  IconError,\n  ValidContainer,\n  ValidMessage,\n  ContainerLayout,\n} from './AuthForm.styled';\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, ({ min }) => `Name must be at least ${min} characters`)\n    .max(12, ({ max }) => `Name must be at least ${max} characters`)\n    .required('Name is required')\n    .label('Name'),\n  birthdate: yup.date().nullable().required('Your age is required'),\n  email: yup\n    .string()\n    .email('Please enter valid email')\n    .required('Email address is required'),\n  password: yup\n    .string()\n    .min(6, ({ min }) => `Password must be at least ${min} characters`)\n    .max(30, ({ max }) => `Password must be no more than ${max} characters`)\n    .required('Password is required'),\n});\n\nconst formatDate = date => {\n  return format(date, 'dd/MM/yyyy');\n};\n\nconst AuthForm = () => {\n  const [textPassword, setTextPassword] = useState(true);\n  const [isEmailValid, setIsEmailValid] = useState(false);\n  const [isPasswordValid, setIsPasswordValid] = useState(false);\n\n  const birthdateInputRef = useRef(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const initialValues = {\n    name: '',\n    birthdate: null,\n    email: '',\n    password: '',\n  };\n\n  const resetForm = () => {\n    formik.resetForm({\n      values: initialValues,\n    });\n  };\n\n  const openCalendar = () => {\n    if (birthdateInputRef.current) {\n      birthdateInputRef.current.setOpen(true);\n    }\n  };\n\n  const handleEmailBlur = e => {\n    formik.handleBlur(e);\n    const email = e.target.value;\n    const isValid = validationSchema.fields.email.isValidSync(email);\n    setIsEmailValid(isValid);\n  };\n\n  const handlePasswordBlur = e => {\n    formik.handleBlur(e);\n    const password = e.target.value;\n    const isValid = validationSchema.fields.password.isValidSync(password);\n    setIsPasswordValid(isValid);\n  };\n\n  const onSubmit = values => {\n    const formattedValues = {\n      ...values,\n      birthdate: values.birthdate ? formatDate(values.birthdate) : null,\n    };\n\n    dispatch(signupUser({ ...formattedValues }));\n\n    resetForm();\n    navigate('/home', { replace: true });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validationSchema,\n    validateOnSubmit: true,\n  });\n\n  return (\n    <ContainerLayout>\n      <RegisterContainer onSubmit={formik.handleSubmit}>\n        <Title>Sign up</Title>\n        <InputBlock>\n          <label htmlFor=\"name\">\n            <StyledInput\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Name\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.name}\n            />\n            {formik.touched.name && formik.errors.name && (\n              <ErrorContainer>\n                <ErrorMessage>{formik.errors.name}</ErrorMessage>\n              </ErrorContainer>\n            )}\n          </label>\n\n          <label htmlFor=\"birthdate\">\n            <StyledDatePicker\n              id=\"birthdate\"\n              name=\"birthdate\"\n              placeholderText=\"dd/mm/yyyy\"\n              selected={formik.values.birthdate}\n              onChange={date => {\n                formik.setFieldValue('birthdate', date);\n              }}\n              dateFormat=\"dd/MM/yyyy\"\n              onBlur={formik.handleBlur}\n            />\n            <StyledIconСalendar onClick={openCalendar}>\n              <IconСalendar>\n                <use href={sprite + '#icon-calendar'} />\n              </IconСalendar>\n            </StyledIconСalendar>\n            {formik.touched.birthdate && formik.errors.birthdate && (\n              <ErrorContainer>\n                <ErrorMessage>{formik.errors.birthdate}</ErrorMessage>\n              </ErrorContainer>\n            )}\n          </label>\n\n          <label htmlFor=\"email\">\n            <StyledInput\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Email\"\n              onChange={formik.handleChange}\n              onBlur={handleEmailBlur}\n              value={formik.values.email}\n              style={{\n                borderColor: isEmailValid\n                  ? '#3cbc81'\n                  : formik.touched.email && formik.errors.email\n                  ? '#da1414'\n                  : ' rgba(243, 243, 243, 0.2)',\n              }}\n              onMouseOver={e => {\n                e.target.style.outline = 'none';\n                e.target.style.color = '#f3f3f3';\n                e.target.style.borderColor = 'rgba(243, 243, 243, 0.5)';\n              }}\n              onFocus={e => {\n                e.target.style.outline = 'none';\n                e.target.style.color = '#f3f3f3';\n                e.target.style.borderColor = 'rgba(243, 243, 243, 0.5)';\n              }}\n            />\n\n            {isEmailValid && (\n              <ValidContainer>\n                <ValidMessage>This is a correct email</ValidMessage>\n              </ValidContainer>\n            )}\n\n            {isEmailValid && (\n              <div>\n                <IconDone>\n                  <use href={`${sprite}#icon-done`} />\n                </IconDone>\n              </div>\n            )}\n\n            {formik.touched.email && formik.errors.email && (\n              <ErrorContainer>\n                <ErrorMessage>{formik.errors.email}</ErrorMessage>\n              </ErrorContainer>\n            )}\n\n            {formik.touched.email && !!formik.errors.email && (\n              <div>\n                <IconError>\n                  <use href={`${sprite}#icon-error`} />\n                </IconError>\n              </div>\n            )}\n          </label>\n\n          <label htmlFor=\"password\">\n            <StyledInput\n              name=\"password\"\n              type={textPassword ? 'password' : 'text'}\n              placeholder=\"Password\"\n              onChange={formik.handleChange}\n              onBlur={handlePasswordBlur}\n              value={formik.values.password}\n              style={{\n                borderColor: isPasswordValid\n                  ? '#3cbc81'\n                  : formik.touched.password && formik.errors.password\n                  ? '#da1414'\n                  : ' rgba(243, 243, 243, 0.2)',\n                color: textPassword ? 'inherit' : '#f3f3f3',\n              }}\n              onMouseOver={e => {\n                e.target.style.outline = 'none';\n                e.target.style.color = '#f3f3f3';\n                e.target.style.borderColor = 'rgba(243, 243, 243, 0.5)';\n              }}\n              onFocus={e => {\n                e.target.style.outline = 'none';\n                e.target.style.color = '#f3f3f3';\n                e.target.style.borderColor = 'rgba(243, 243, 243, 0.5)';\n              }}\n            />\n\n            {isPasswordValid && (\n              <ValidContainer>\n                <ValidMessage>This is a correct password</ValidMessage>\n              </ValidContainer>\n            )}\n\n            <div onClick={() => setTextPassword(prevState => !prevState)}>\n              {textPassword ? (\n                <IconPasswordHidden>\n                  <use href={`${sprite}#icon-eye-off`} />\n                </IconPasswordHidden>\n              ) : (\n                <IconPasswordShow>\n                  <use href={`${sprite}#icon-eye`} />\n                </IconPasswordShow>\n              )}\n            </div>\n            {formik.touched.password && formik.errors.password && (\n              <ErrorContainer>\n                <ErrorMessage>{formik.errors.password}</ErrorMessage>\n              </ErrorContainer>\n            )}\n          </label>\n        </InputBlock>\n        <StyledBtn\n          type=\"submit\"\n          disabled={!formik.isValid || formik.isSubmitting}\n        >\n          Sign up\n        </StyledBtn>\n        <StyledLink to=\"/signin\">Sign In</StyledLink>\n      </RegisterContainer>\n    </ContainerLayout>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from 'components/AuthForm/AuthForm';\n\nconst SignUpPage = () => {\n  return (\n    <>\n      <AuthForm />\n    </>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["ContainerLayout","styled","_templateObject","_taggedTemplateLiteral","welcomemd1x","welcomemd2x","welcomesm1x","welcomesm2x","welcome1x","welcome2x","RegisterContainer","_templateObject2","Title","_templateObject3","StyledDatePicker","DatePicker","_templateObject4","StyledIconСalendar","_templateObject5","IconСalendar","_templateObject6","InputBlock","_templateObject7","StyledInput","_templateObject8","ErrorContainer","_templateObject9","ValidContainer","_templateObject10","ErrorMessage","_templateObject11","ValidMessage","_templateObject12","StyledBtn","_templateObject13","StyledLink","NavLink","_templateObject14","IconPasswordHidden","_templateObject15","IconPasswordShow","_templateObject16","IconDone","_templateObject17","IconError","_templateObject18","validationSchema","yup","shape","name","min","_ref","concat","max","_ref2","required","label","birthdate","nullable","email","password","_ref3","_ref4","_useState","useState","_useState2","_slicedToArray","textPassword","setTextPassword","_useState3","_useState4","isEmailValid","setIsEmailValid","_useState5","_useState6","isPasswordValid","setIsPasswordValid","birthdateInputRef","useRef","dispatch","useDispatch","navigate","useNavigate","initialValues","formik","useFormik","onSubmit","values","date","formattedValues","_objectSpread","format","signupUser","resetForm","replace","validateOnSubmit","_jsx","children","_jsxs","handleSubmit","htmlFor","type","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","id","placeholderText","selected","setFieldValue","dateFormat","onClick","current","setOpen","href","sprite","e","target","isValid","fields","isValidSync","style","borderColor","onMouseOver","outline","color","onFocus","prevState","disabled","isSubmitting","to","_Fragment","AuthForm"],"sourceRoot":""}