{"version":3,"file":"static/js/396.d07646a9.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.styled.jsx","components/AuthForm/AuthForm.jsx","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport DatePicker from 'react-datepicker';\n\nexport const RegisterContainer = styled.form`\n  width: 335px;\n  height: auto;\n  margin-left: 20px;\n  margin-right: 20px;\n\n  @media (min-width: 768px) {\n    width: 400px;\n    margin-left: 64px;\n  }\n\n  @media (min-width: 1024px) {\n    width: 400px;\n\n    margin-left: 100px;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: #f3f3f3;\n  font-size: 28px;\n  font-weight: 600;\n  line-height: 1.15;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    line-height: 1.1;\n  }\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  width: 335px;\n  height: 54px;\n  border-radius: 200px;\n  border: 1px solid rgba(243, 243, 243, 0.2);\n  background-color: transparent;\n  padding-left: 24px;\n  margin-bottom: 14px;\n\n  &::placeholder {\n    color: #f3f3f3;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.3;\n  }\n\n  @media (min-width: 768px) {\n    width: 400px;\n    height: 56px;\n    font-size: 17px;\n    line-height: 1.5;\n\n    &::placeholder {\n      font-size: 17px;\n    }\n  }\n\n  @media (min-width: 1024px) {\n    padding-left: 22px;\n  }\n\n  &:focus,\n  &:hover {\n    outline: none;\n    color: #f3f3f3;\n    border-color: rgba(243, 243, 243, 0.5);\n    background-color: transparent;\n  }\n`;\n\nexport const StyledIcon小alendar = styled.div`\n  position: absolute;\n  top: 100px;\n  transform: translateY(-50%);\n  right: 20px;\n  cursor: pointer;\n`;\n\nexport const Icon小alendar = styled.svg`\n  width: 24px;\n  height: 24px;\n`;\n\nexport const InputBlock = styled.div`\n  position: relative;\n  margin-top: 28px;\n  margin-bottom: 14px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  height: 54px;\n  border-radius: 200px;\n  border: 1px solid rgba(243, 243, 243, 0.2);\n  background-color: transparent;\n  padding-left: 24px;\n  margin-bottom: 14px;\n\n  &::placeholder {\n    color: #f3f3f3;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.3;\n  }\n\n  @media (min-width: 768px) {\n    height: 56px;\n    font-size: 17px;\n    line-height: 1.5;\n\n    &::placeholder {\n      font-size: 17px;\n    }\n  }\n\n  @media (min-width: 1024px) {\n    padding-left: 22px;\n  }\n\n  &:focus,\n  &:hover {\n    outline: none;\n    color: #f3f3f3;\n    border-color: rgba(243, 243, 243, 0.5);\n    background-color: transparent;\n  }\n`;\n\nexport const ErrorContainer = styled.div`\n  position: absolute;\n`;\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  font-size: 12px;\n`;\n\nexport const StyledBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 54px;\n\n  border-radius: 42px;\n  border: 1px solid rgba(243, 243, 243, 0.2);\n  background: #f3f3f3;\n\n  color: #161f37;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.1;\n\n  outline: none;\n  cursor: pointer;\n  transition: 0.3s ease;\n\n  &:hover {\n    background: #434d67;\n    color: #f3f3f3;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.3;\n  text-decoration-line: underline;\n  padding-top: 14px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n  }\n`;\n\nexport const IconPasswordHidden = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 238px;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nexport const IconPasswordShow = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  position: absolute;\n  right: 20px;\n  top: 238px;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n","import React, { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { signupUser } from 'redux/auth/authOperations';\nimport { useFormik } from 'formik';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { format } from 'date-fns';\nimport * as yup from 'yup';\nimport sprite from 'assets/sprite.svg';\nimport {\n  RegisterContainer,\n  Title,\n  InputBlock,\n  StyledInput,\n  StyledDatePicker,\n  StyledIcon小alendar,\n  Icon小alendar,\n  ErrorContainer,\n  ErrorMessage,\n  StyledBtn,\n  StyledLink,\n  IconPasswordHidden,\n  IconPasswordShow,\n} from './AuthForm.styled';\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, ({ min }) => `Name must be at least ${min} characters`)\n    .max(16, ({ max }) => `Name must be at least ${max} characters`)\n    .required('Name is required')\n    .label('Name'),\n  birthdate: yup.date().nullable().required('Your age is required'),\n  email: yup\n    .string()\n    .email('Please enter valid email')\n    .required('Email address is Required'),\n  password: yup\n    .string()\n    .min(8, ({ min }) => `Password must be at least ${min} characters`)\n    .max(30, ({ max }) => `Password must be no more than ${max} characters`)\n    .required('Password is required'),\n});\n\nconst formatDate = date => {\n  return format(date, 'dd/mm/yyyy');\n};\n\nconst AuthForm = () => {\n  const [textPassword, setTextPassword] = useState(true);\n  const birthdateInputRef = useRef(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const initialValues = {\n    name: '',\n    birthdate: null,\n    email: '',\n    password: '',\n  };\n\n  const resetForm = () => {\n    formik.resetForm({\n      values: initialValues,\n    });\n  };\n\n  const openCalendar = () => {\n    if (birthdateInputRef.current) {\n      birthdateInputRef.current.setOpen(true);\n    }\n  };\n\n  const onSubmit = values => {\n    const formattedValues = {\n      ...values,\n      birthdate: values.birthdate ? formatDate(values.birthdate) : null,\n    };\n\n    \n    dispatch(signupUser({ ...formattedValues }));\n\n    resetForm();\n    navigate('/home', { replace: true });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validationSchema,\n  });\n\n  return (\n    <RegisterContainer onSubmit={formik.handleSubmit}>\n      <Title>Sign up</Title>\n      <InputBlock>\n        <label htmlFor=\"name\">\n          <StyledInput\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.name}\n          />\n        </label>\n        {formik.touched.name && formik.errors.name && (\n          <ErrorContainer>\n            <ErrorMessage>{formik.errors.name}</ErrorMessage>\n          </ErrorContainer>\n        )}\n\n        <label htmlFor=\"birthdate\">\n          <StyledDatePicker\n            id=\"birthdate\"\n            name=\"birthdate\"\n            placeholderText=\"dd/mm/yyyy\"\n            selected={formik.values.birthdate}\n            onChange={date => {\n              formik.setFieldValue('birthdate', date);\n            }}\n            dateFormat=\"dd/mm/yyyy\"\n            onBlur={formik.handleBlur}\n          />\n          <StyledIcon小alendar onClick={openCalendar}>\n            <Icon小alendar>\n              <use href={sprite + '#icon-calendar'} />\n            </Icon小alendar>\n          </StyledIcon小alendar>\n        </label>\n\n        {formik.touched.birthdate && formik.errors.birthdate && (\n          <ErrorContainer>\n            <ErrorMessage>{formik.errors.birthdate}</ErrorMessage>\n          </ErrorContainer>\n        )}\n\n        <label htmlFor=\"email\">\n          <StyledInput\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n        </label>\n        {formik.touched.email && formik.errors.email && (\n          <ErrorContainer>\n            <ErrorMessage>{formik.errors.email}</ErrorMessage>\n          </ErrorContainer>\n        )}\n\n        <label htmlFor=\"password\">\n          <StyledInput\n            name=\"password\"\n            type={textPassword ? 'password' : 'text'}\n            placeholder=\"Password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n            style={{ color: textPassword ? 'inherit' : '#f3f3f3' }}\n          />\n          <div onClick={() => setTextPassword(prevState => !prevState)}>\n            {textPassword ? (\n              <IconPasswordHidden>\n                <use href={`${sprite}#icon-eye-off`} />\n              </IconPasswordHidden>\n            ) : (\n              <IconPasswordShow>\n                <use href={`${sprite}#icon-eye`} />\n              </IconPasswordShow>\n            )}\n          </div>\n        </label>\n        {formik.touched.password && formik.errors.password && (\n          <ErrorContainer>\n            <ErrorMessage>{formik.errors.password}</ErrorMessage>\n          </ErrorContainer>\n        )}\n      </InputBlock>\n      <StyledBtn\n        type=\"submit\"\n        disabled={!formik.isValid || formik.isSubmitting}\n      >\n        Sign up\n      </StyledBtn>\n      <StyledLink to=\"/signin\">Sign In</StyledLink>\n    </RegisterContainer>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from 'components/AuthForm/AuthForm';\n\nconst SignUpPage = () => {\n  return (\n    <>\n      <AuthForm />\n    </>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["RegisterContainer","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","StyledDatePicker","DatePicker","_templateObject3","StyledIcon小alendar","_templateObject4","Icon小alendar","_templateObject5","InputBlock","_templateObject6","StyledInput","_templateObject7","ErrorContainer","_templateObject8","ErrorMessage","_templateObject9","StyledBtn","_templateObject10","StyledLink","NavLink","_templateObject11","IconPasswordHidden","_templateObject12","IconPasswordShow","_templateObject13","validationSchema","yup","shape","name","min","_ref","concat","max","_ref2","required","label","birthdate","nullable","email","password","_ref3","_ref4","_useState","useState","_useState2","_slicedToArray","textPassword","setTextPassword","birthdateInputRef","useRef","dispatch","useDispatch","navigate","useNavigate","initialValues","formik","useFormik","onSubmit","values","date","formattedValues","_objectSpread","format","signupUser","resetForm","replace","_jsxs","handleSubmit","children","_jsx","htmlFor","type","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","id","placeholderText","selected","setFieldValue","dateFormat","onClick","current","setOpen","href","sprite","style","color","prevState","disabled","isValid","isSubmitting","to","_Fragment","AuthForm"],"sourceRoot":""}