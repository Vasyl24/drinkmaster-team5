{"version":3,"file":"static/js/57.406d1041.chunk.js","mappings":"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","sources":["../node_modules/classnames/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/rodal/lib/rodal.esm.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/tua-body-scroll-lock/dist/tua-bsl.mjs"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n/* ===============================\n * Rodal v2.0.0 https://github.com/chenjiahan/rodal\n * =============================== */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\n// env\nvar IN_BROWSER = typeof window !== 'undefined';\nvar UA = IN_BROWSER && window.navigator.userAgent.toLowerCase();\nvar IS_IE_9 = UA && UA.indexOf('msie 9.0') > 0;\nvar Dialog = function Dialog(props) {\n  var animation = (props.animationType === 'enter' ? props.enterAnimation : props.leaveAnimation) || props.animation;\n  var className = \"rodal-dialog rodal-\" + animation + \"-\" + props.animationType;\n  var CloseButton = props.showCloseButton ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"rodal-close\",\n    onClick: props.onClose,\n    onKeyPress: function onKeyPress(event) {\n      if (props.onClose && event.which === 13) {\n        props.onClose(event);\n      }\n    },\n    tabIndex: 0\n  }) : null;\n  var width = props.width,\n    height = props.height,\n    measure = props.measure,\n    duration = props.duration,\n    customStyles = props.customStyles,\n    id = props.id;\n  var style = {\n    width: width + measure,\n    height: height + measure,\n    animationDuration: duration + 'ms',\n    WebkitAnimationDuration: duration + 'ms'\n  };\n  var mergedStyles = _extends({}, style, customStyles);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: mergedStyles,\n    className: className,\n    id: id\n  }, props.children, CloseButton);\n};\nvar Rodal = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Rodal, _React$Component);\n  function Rodal() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      isShow: false,\n      animationType: 'leave'\n    };\n    _this.onKeyUp = function (event) {\n      if (!_this.props.closeOnEsc || event.keyCode !== 27) {\n        return;\n      }\n      _this.props.onClose(event);\n    };\n    _this.animationEnd = function (event) {\n      var animationType = _this.state.animationType;\n      var _this$props = _this.props,\n        closeOnEsc = _this$props.closeOnEsc,\n        onAnimationEnd = _this$props.onAnimationEnd;\n      if (animationType === 'leave') {\n        _this.setState({\n          isShow: false\n        });\n      } else if (closeOnEsc) {\n        _this.el.focus();\n      }\n      if (event.target === _this.el && onAnimationEnd) {\n        onAnimationEnd();\n      }\n    };\n    return _this;\n  }\n  var _proto = Rodal.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.props.visible) {\n      this.enter();\n    }\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.visible && !prevProps.visible) {\n      this.enter();\n    }\n    if (!this.props.visible && prevProps.visible) {\n      this.leave();\n    }\n  };\n  _proto.enter = function enter() {\n    this.setState({\n      isShow: true,\n      animationType: 'enter'\n    });\n  };\n  _proto.leave = function leave() {\n    this.setState(IS_IE_9 ? {\n      isShow: false\n    } : {\n      animationType: 'leave'\n    });\n  };\n  _proto.render = function render() {\n    var _this2 = this;\n    var _this$props2 = this.props,\n      closeMaskOnClick = _this$props2.closeMaskOnClick,\n      onClose = _this$props2.onClose,\n      customMaskStyles = _this$props2.customMaskStyles,\n      showMask = _this$props2.showMask,\n      duration = _this$props2.duration,\n      className = _this$props2.className,\n      children = _this$props2.children;\n    var _this$state = this.state,\n      isShow = _this$state.isShow,\n      animationType = _this$state.animationType;\n    var Mask = showMask ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rodal-mask\",\n      style: customMaskStyles,\n      onClick: closeMaskOnClick ? onClose : void 0\n    }) : null;\n    var style = {\n      display: isShow ? '' : 'none',\n      animationDuration: duration + 'ms',\n      WebkitAnimationDuration: duration + 'ms'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      className: cx('rodal', \"rodal-fade-\" + animationType, className),\n      onAnimationEnd: this.animationEnd,\n      tabIndex: \"-1\",\n      ref: function ref(el) {\n        _this2.el = el;\n      },\n      onKeyUp: this.onKeyUp\n    }, Mask, /*#__PURE__*/React.createElement(Dialog, _extends({}, this.props, {\n      animationType: animationType\n    }), children));\n  };\n  return Rodal;\n}(React.Component);\nRodal.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  measure: PropTypes.string,\n  visible: PropTypes.bool,\n  showMask: PropTypes.bool,\n  closeOnEsc: PropTypes.bool,\n  closeMaskOnClick: PropTypes.bool,\n  showCloseButton: PropTypes.bool,\n  animation: PropTypes.string,\n  enterAnimation: PropTypes.string,\n  leaveAnimation: PropTypes.string,\n  duration: PropTypes.number,\n  className: PropTypes.string,\n  customStyles: PropTypes.object,\n  customMaskStyles: PropTypes.object,\n  onClose: PropTypes.func.isRequired,\n  onAnimationEnd: PropTypes.func,\n  id: PropTypes.string\n};\nRodal.defaultProps = {\n  width: 400,\n  height: 240,\n  measure: 'px',\n  visible: false,\n  showMask: true,\n  closeOnEsc: false,\n  closeMaskOnClick: true,\n  showCloseButton: true,\n  animation: 'zoom',\n  enterAnimation: '',\n  leaveAnimation: '',\n  duration: 300,\n  className: '',\n  customStyles: {},\n  customMaskStyles: {}\n};\nexport default Rodal;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * tua-body-scroll-lock v1.4.0\n * (c) 2023 Evinma, BuptStEve\n * @license MIT\n */\n\nvar isServer = function isServer() {\n  return typeof window === 'undefined';\n};\nvar detectOS = function detectOS(ua) {\n  ua = ua || navigator.userAgent;\n  var ipad = /(iPad).*OS\\s([\\d_]+)/.test(ua);\n  var iphone = !ipad && /(iPhone\\sOS)\\s([\\d_]+)/.test(ua);\n  var android = /(Android);?[\\s/]+([\\d.]+)?/.test(ua);\n  var ios = iphone || ipad;\n  return {\n    ios: ios,\n    android: android\n  };\n};\nfunction getEventListenerOptions(options) {\n  /* istanbul ignore if */\n  if (isServer()) return false;\n  if (!options) {\n    throw new Error('options must be provided');\n  }\n  var isSupportOptions = false;\n  var listenerOptions = {\n    get passive() {\n      isSupportOptions = true;\n      return undefined;\n    }\n  };\n  /* istanbul ignore next */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  var noop = function noop() {};\n  var testEvent = '__TUA_BSL_TEST_PASSIVE__';\n  window.addEventListener(testEvent, noop, listenerOptions);\n  window.removeEventListener(testEvent, noop, listenerOptions);\n  var capture = options.capture;\n  /* istanbul ignore next */\n  return isSupportOptions ? options : typeof capture !== 'undefined' ? capture : false;\n}\n\nvar lockedNum = 0;\nvar initialClientY = 0;\nvar initialClientX = 0;\nvar unLockCallback = null;\nvar documentListenerAdded = false;\nvar lockedElements = [];\nvar eventListenerOptions = getEventListenerOptions({\n  passive: false\n});\nvar supportsNativeSmoothScroll = !isServer() && 'scrollBehavior' in document.documentElement.style;\nvar setOverflowHiddenPc = function setOverflowHiddenPc() {\n  var $html = document.documentElement;\n  var htmlStyle = Object.assign({}, $html.style);\n  var scrollBarWidth = window.innerWidth - $html.clientWidth;\n  var previousPaddingRight = parseInt(window.getComputedStyle($html).paddingRight, 10);\n  $html.style.overflow = 'hidden';\n  $html.style.boxSizing = 'border-box';\n  $html.style.paddingRight = \"\".concat(scrollBarWidth + previousPaddingRight, \"px\");\n  return function () {\n    ['overflow', 'boxSizing', 'paddingRight'].forEach(function (x) {\n      $html.style[x] = htmlStyle[x] || '';\n    });\n  };\n};\nvar setOverflowHiddenMobile = function setOverflowHiddenMobile(options) {\n  var $html = document.documentElement;\n  var $body = document.body;\n  var scrollTop = $html.scrollTop || $body.scrollTop;\n  var htmlStyle = Object.assign({}, $html.style);\n  var bodyStyle = Object.assign({}, $body.style);\n  $html.style.height = '100%';\n  $html.style.overflow = 'hidden';\n  $body.style.top = \"-\".concat(scrollTop, \"px\");\n  $body.style.width = '100%';\n  $body.style.height = 'auto';\n  $body.style.position = 'fixed';\n  $body.style.overflow = (options === null || options === void 0 ? void 0 : options.overflowType) || 'hidden';\n  return function () {\n    $html.style.height = htmlStyle.height || '';\n    $html.style.overflow = htmlStyle.overflow || '';\n    ['top', 'width', 'height', 'overflow', 'position'].forEach(function (x) {\n      $body.style[x] = bodyStyle[x] || '';\n    });\n    var scrollToOptions = {\n      top: scrollTop,\n      behavior: 'instant'\n    };\n    supportsNativeSmoothScroll ? window.scrollTo(scrollToOptions) : window.scrollTo(0, scrollTop);\n  };\n};\nvar preventDefault = function preventDefault(event) {\n  if (!event.cancelable) return;\n  event.preventDefault();\n};\nvar handleScroll = function handleScroll(event, targetElement) {\n  if (targetElement) {\n    var scrollTop = targetElement.scrollTop,\n      scrollLeft = targetElement.scrollLeft,\n      scrollWidth = targetElement.scrollWidth,\n      scrollHeight = targetElement.scrollHeight,\n      clientWidth = targetElement.clientWidth,\n      clientHeight = targetElement.clientHeight;\n    var clientX = event.targetTouches[0].clientX - initialClientX;\n    var clientY = event.targetTouches[0].clientY - initialClientY;\n    var isVertical = Math.abs(clientY) > Math.abs(clientX);\n    var isOnTop = clientY > 0 && scrollTop === 0;\n    var isOnLeft = clientX > 0 && scrollLeft === 0;\n    var isOnRight = clientX < 0 && scrollLeft + clientWidth + 1 >= scrollWidth;\n    var isOnBottom = clientY < 0 && scrollTop + clientHeight + 1 >= scrollHeight;\n    if (isVertical && (isOnTop || isOnBottom) || !isVertical && (isOnLeft || isOnRight)) {\n      return preventDefault(event);\n    }\n  }\n  event.stopPropagation();\n  return true;\n};\nvar checkTargetElement = function checkTargetElement(targetElement) {\n  if (targetElement) return;\n  if (targetElement === null) return;\n  if (process.env.NODE_ENV === 'production') return;\n  console.warn('If scrolling is also required in the floating layer, ' + 'the target element must be provided.');\n};\nvar lock = function lock(targetElement, options) {\n  if (isServer()) return;\n  checkTargetElement(targetElement);\n  if (detectOS().ios) {\n    // iOS\n    if (targetElement) {\n      var elementArray = Array.isArray(targetElement) ? targetElement : [targetElement];\n      elementArray.forEach(function (element) {\n        if (element && lockedElements.indexOf(element) === -1) {\n          element.ontouchstart = function (event) {\n            initialClientY = event.targetTouches[0].clientY;\n            initialClientX = event.targetTouches[0].clientX;\n          };\n          element.ontouchmove = function (event) {\n            if (event.targetTouches.length !== 1) return;\n            handleScroll(event, element);\n          };\n          lockedElements.push(element);\n        }\n      });\n    }\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, eventListenerOptions);\n      documentListenerAdded = true;\n    }\n  } else if (lockedNum <= 0) {\n    unLockCallback = detectOS().android ? setOverflowHiddenMobile(options) : setOverflowHiddenPc();\n  }\n  lockedNum += 1;\n};\nvar unlock = function unlock(targetElement) {\n  if (isServer()) return;\n  checkTargetElement(targetElement);\n  lockedNum -= 1;\n  if (lockedNum > 0) return;\n  if (!detectOS().ios && typeof unLockCallback === 'function') {\n    unLockCallback();\n    return;\n  }\n  // iOS\n  if (targetElement) {\n    var elementArray = Array.isArray(targetElement) ? targetElement : [targetElement];\n    elementArray.forEach(function (element) {\n      var index = lockedElements.indexOf(element);\n      if (index !== -1) {\n        element.ontouchmove = null;\n        element.ontouchstart = null;\n        lockedElements.splice(index, 1);\n      }\n    });\n  }\n  if (documentListenerAdded) {\n    document.removeEventListener('touchmove', preventDefault, eventListenerOptions);\n    documentListenerAdded = false;\n  }\n};\nvar clearBodyLocks = function clearBodyLocks() {\n  if (isServer()) return;\n  lockedNum = 0;\n  if (!detectOS().ios && typeof unLockCallback === 'function') {\n    unLockCallback();\n    return;\n  }\n  // IOS\n  if (lockedElements.length) {\n    // clear events\n    var element = lockedElements.pop();\n    while (element) {\n      element.ontouchmove = null;\n      element.ontouchstart = null;\n      element = lockedElements.pop();\n    }\n  }\n  if (documentListenerAdded) {\n    document.removeEventListener('touchmove', preventDefault, eventListenerOptions);\n    documentListenerAdded = false;\n  }\n};\n\nexport { clearBodyLocks, lock, unlock };\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_extends","assign","target","source","this","UA","window","navigator","userAgent","toLowerCase","IS_IE_9","indexOf","Dialog","className","animationType","enterAnimation","leaveAnimation","animation","CloseButton","showCloseButton","React","onClick","onClose","onKeyPress","event","which","tabIndex","width","height","measure","duration","customStyles","id","mergedStyles","animationDuration","WebkitAnimationDuration","style","children","Rodal","_React$Component","subClass","superClass","_this","_len","args","_key","concat","state","isShow","onKeyUp","closeOnEsc","keyCode","animationEnd","_this$props","onAnimationEnd","setState","el","focus","create","constructor","_proto","componentDidMount","visible","enter","componentDidUpdate","prevProps","leave","render","_this2","_this$props2","closeMaskOnClick","customMaskStyles","showMask","_this$state","Mask","display","cx","ref","propTypes","defaultProps","_objectWithoutProperties","excluded","sourceKeys","keys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","isVariantLabel","v","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","featureProps","exit","drag","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","canHandoff","HandoffAppearAnimations","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","parse","parseFloat","alpha","scale","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","noop","Queue","_classCallCheck","order","scheduled","_createClass","process","add","index","splice","delete","clear","stepsOrder","_createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","queue","cancel","remove","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","wake","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","frame","cancelFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","done","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","_ref3","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","parseCSSVariable","exec","_match","getVariableValue","_parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","trimmed","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","_ref12","_ref13","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_get","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig","isServer","detectOS","ua","ipad","ios","android","lockedNum","initialClientY","initialClientX","documentListenerAdded","lockedElements","eventListenerOptions","isSupportOptions","listenerOptions","testEvent","capture","getEventListenerOptions","supportsNativeSmoothScroll","preventDefault","cancelable","targetElement","ontouchstart","targetTouches","clientY","clientX","ontouchmove","scrollWidth","scrollHeight","clientWidth","clientHeight","isVertical","stopPropagation","handleScroll","$html","$body","htmlStyle","bodyStyle","overflow","overflowType","scrollToOptions","behavior","setOverflowHiddenMobile","scrollBarWidth","innerWidth","previousPaddingRight","boxSizing","setOverflowHiddenPc"],"sourceRoot":""}